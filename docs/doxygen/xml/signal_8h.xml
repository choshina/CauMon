<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="signal_8h" kind="file" language="C++">
    <compoundname>signal.h</compoundname>
    <includes local="no">deque</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">limits</includes>
    <includes local="yes">mex.h</includes>
    <includedby refid="signal_8cpp" local="yes">/home/zhenya/CauMon/src/cpp/signal.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>/home/zhenya/CauMon/src/include/signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>deque</label>
      </node>
      <node id="6">
        <label>mex.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/zhenya/CauMon/src/cpp/signal.cpp</label>
        <link refid="signal_8cpp"/>
      </node>
      <node id="1">
        <label>/home/zhenya/CauMon/src/include/signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classCPSGrader_1_1Point" prot="public">CPSGrader::Point</innerclass>
    <innerclass refid="classCPSGrader_1_1Sample" prot="public">CPSGrader::Sample</innerclass>
    <innerclass refid="classCPSGrader_1_1Sequence" prot="public">CPSGrader::Sequence</innerclass>
    <innerclass refid="classCPSGrader_1_1Signal" prot="public">CPSGrader::Signal</innerclass>
    <innernamespace refid="namespaceCPSGrader">CPSGrader</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="signal_8h_1ae420caa0af9cbdf102ed255034e27c5b" prot="public" static="no">
        <name>BOTTOM</name>
        <initializer>(-Signal::BigM)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/signal.h" line="12" column="9" bodyfile="/home/zhenya/CauMon/src/include/signal.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="signal_8h_1afc0eef637f1016e8786e45e106a4881e" prot="public" static="no">
        <name>TOP</name>
        <initializer>(Signal::BigM)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/signal.h" line="13" column="9" bodyfile="/home/zhenya/CauMon/src/include/signal.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SIGNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIGNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>maybe<sp/>make<sp/>TOP<sp/>and<sp/>BOTTOM<sp/>static<sp/>signal<sp/>attribute<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="signal_8h_1ae420caa0af9cbdf102ed255034e27c5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOTTOM<sp/>(-Signal::BigM)<sp/></highlight><highlight class="comment">//-std::numeric_limits&lt;double&gt;::infinity()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="signal_8h_1afc0eef637f1016e8786e45e106a4881e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOP<sp/>(Signal::BigM)<sp/></highlight><highlight class="comment">//std::numeric_limits&lt;double&gt;::infinity()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="18"><highlight class="comment">double<sp/>fmin(double<sp/>a,double<sp/>b)</highlight></codeline>
<codeline lineno="19"><highlight class="comment">{</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>return<sp/>(a&lt;b)?a:b;</highlight></codeline>
<codeline lineno="21"><highlight class="comment">}</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">double<sp/>fmax(double<sp/>a,double<sp/>b)</highlight></codeline>
<codeline lineno="24"><highlight class="comment">{</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>return<sp/>(b&lt;a)?a:b;</highlight></codeline>
<codeline lineno="26"><highlight class="comment">}</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCPSGrader" kindref="compound">CPSGrader</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classCPSGrader_1_1Point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCPSGrader_1_1Point" kindref="compound">Point</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classCPSGrader_1_1Point_1a625c935b473e7af05336f36a3dbcfa37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Point_1a625c935b473e7af05336f36a3dbcfa37" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="33" refid="classCPSGrader_1_1Point_1a0fd55f2bb41cb0f67424c2735957aed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Point_1a0fd55f2bb41cb0f67424c2735957aed9" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classCPSGrader_1_1Point_1a3e144ec2ae899a83c52d6c9c66fc0d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Point_1a3e144ec2ae899a83c52d6c9c66fc0d36" kindref="member">Point</ref>():<sp/>time(0.),<sp/>value(0.)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="36" refid="classCPSGrader_1_1Point_1a6aff06c5a6cc57a15cf45770d4a980a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Point_1a6aff06c5a6cc57a15cf45770d4a980a4" kindref="member">Point</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>:<sp/>time(t),<sp/>value(v)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/><ref refid="namespaceCPSGrader_1ac855d9c8fe9450d4c68d66d8e3d37c04" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Point" kindref="compound">Point</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classCPSGrader_1_1Sample" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCPSGrader_1_1Sample" kindref="compound">Sample</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Point" kindref="compound">Point</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classCPSGrader_1_1Sample_1acc1303adb3af8008a1b2752d9d32dcc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Sample_1acc1303adb3af8008a1b2752d9d32dcc7" kindref="member">derivative</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classCPSGrader_1_1Sample_1af1bb0e3ab77abee25d139be4054794dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Sample_1af1bb0e3ab77abee25d139be4054794dd" kindref="member">Sample</ref>()<sp/>{derivative<sp/>=0;}</highlight></codeline>
<codeline lineno="46" refid="classCPSGrader_1_1Sample_1a85c152c8adc073afffe7a16cb31588df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Sample_1a85c152c8adc073afffe7a16cb31588df" kindref="member">Sample</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>:<sp/><ref refid="classCPSGrader_1_1Point" kindref="compound">Point</ref>(t,v),<sp/>derivative(d)<sp/>{<sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeIntersect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Sample" kindref="compound">Sample</ref><sp/>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/><ref refid="namespaceCPSGrader_1ac855d9c8fe9450d4c68d66d8e3d37c04" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Sample" kindref="compound">Sample</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classCPSGrader_1_1Sample_1affdaff6e0207b076f19f1f06a73bbed1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Sample::valueAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>+<sp/>derivative<sp/>*<sp/>(t<sp/>-<sp/>time);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classCPSGrader_1_1Sample_1a247daad363e0ff87fa90134c9c5ae929" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Sample::timeIntersect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Sample" kindref="compound">Sample</ref><sp/>&amp;<sp/>point)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>-<sp/>point.<ref refid="classCPSGrader_1_1Point_1a0fd55f2bb41cb0f67424c2735957aed9" kindref="member">value</ref><sp/>+<sp/>(point.<ref refid="classCPSGrader_1_1Sample_1acc1303adb3af8008a1b2752d9d32dcc7" kindref="member">derivative</ref><sp/>*<sp/>point.<ref refid="classCPSGrader_1_1Point_1a625c935b473e7af05336f36a3dbcfa37" kindref="member">time</ref>)<sp/>-<sp/>(derivative<sp/>*<sp/>time))<sp/>/<sp/>(point.<ref refid="classCPSGrader_1_1Sample_1acc1303adb3af8008a1b2752d9d32dcc7" kindref="member">derivative</ref><sp/>-<sp/>derivative);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//piecewise-constant,<sp/>right-continuous<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classCPSGrader_1_1Sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCPSGrader_1_1Sequence" kindref="compound">Sequence</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::deque&lt;Point&gt;<sp/>{<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67" refid="classCPSGrader_1_1Sequence_1a42947bb3dc9ae04478658c1b47f493f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Sequence_1a42947bb3dc9ae04478658c1b47f493f8" kindref="member">Sequence</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/><ref refid="namespaceCPSGrader_1ac855d9c8fe9450d4c68d66d8e3d37c04" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Sequence" kindref="compound">Sequence</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//piecewise-linear,<sp/>right-continuous<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classCPSGrader_1_1Signal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::deque&lt;Sample&gt;<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classCPSGrader_1_1Signal_1a2c3e801ab9e7ebab46c24fea15b791a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a2c3e801ab9e7ebab46c24fea15b791a4" kindref="member">BigM</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classCPSGrader_1_1Signal_1a6308afc2ebbb736a2f1271938b9fc2be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a6308afc2ebbb736a2f1271938b9fc2be" kindref="member">beginTime</ref>;</highlight></codeline>
<codeline lineno="79" refid="classCPSGrader_1_1Signal_1ad6422301194605a5a29f5ffb98d79c79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1ad6422301194605a5a29f5ffb98d79c79" kindref="member">endTime</ref>;</highlight></codeline>
<codeline lineno="80" refid="classCPSGrader_1_1Signal_1a7cb2885522eafe9edf184d3988f4887a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Signal_1a7cb2885522eafe9edf184d3988f4887a" kindref="member">Signal</ref>():<sp/>beginTime(0.),<sp/>endTime(0.)<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//create<sp/>continuous<sp/>signal<sp/>from<sp/>array<sp/>of<sp/>sampling<sp/>points<sp/>(time,<sp/>value)<sp/>with<sp/>linear<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>appendSample(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>appendSample(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>appendSignal(<ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify();<sp/></highlight><highlight class="comment">//remove<sp/>sampling<sp/>points<sp/>where<sp/>(y,dy)<sp/>is<sp/>continuous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//restricts/extends<sp/>the<sp/>signal<sp/>to<sp/>[s,t)<sp/>with<sp/>default<sp/>value<sp/>v<sp/>where<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shift(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//shifts<sp/>the<sp/>signal<sp/>of<sp/>delta_t<sp/>time<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addLastSample();<sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>sample<sp/>at<sp/>endTime.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeInf();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();<sp/></highlight><highlight class="comment">//<sp/>by<sp/>Zhenya</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_value(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>signal<sp/>to<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classCPSGrader_1_1Signal_1a2465e50598a1bda451a51a889f7e9af9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a2465e50598a1bda451a51a889f7e9af9" kindref="member">dumpFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fstream<sp/>ofs;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs.open(filename.c_str(),<sp/>std::ofstream::out);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ofs.is_open())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>begin();<sp/>i<sp/>!=<sp/>end();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>*i<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs.close();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename.c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>writing<sp/>signal&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>implement<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classCPSGrader_1_1Signal_1a805228c1d0f48247ff6f37745272d4ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a805228c1d0f48247ff6f37745272d4ab" kindref="member">compute_not</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;);<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classCPSGrader_1_1Signal_1ad9c41b0c809777ee373043395abd0229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1ad9c41b0c809777ee373043395abd0229" kindref="member">compute_and</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classCPSGrader_1_1Signal_1a8036a76497fc32e81ef3b2d6edd52767" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a8036a76497fc32e81ef3b2d6edd52767" kindref="member">compute_or</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classCPSGrader_1_1Signal_1a7786eef75eaad4502ee5503b248f61fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a7786eef75eaad4502ee5503b248f61fd" kindref="member">compute_implies</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classCPSGrader_1_1Signal_1abb4edb93bc2b82f712a819b9734b96c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1abb4edb93bc2b82f712a819b9734b96c8" kindref="member">compute_eventually</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;);<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classCPSGrader_1_1Signal_1a5ae9736f4c709a74cd9f2ec1b8ac0045" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a5ae9736f4c709a74cd9f2ec1b8ac0045" kindref="member">compute_bounded_eventually</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="classCPSGrader_1_1Signal_1a9ec8aa842161dbbf18251be39a65f103" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a9ec8aa842161dbbf18251be39a65f103" kindref="member">compute_timed_eventually</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classCPSGrader_1_1Signal_1a9affa8cbc706ec45ff4a529919ac540c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a9affa8cbc706ec45ff4a529919ac540c" kindref="member">compute_globally</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;);<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classCPSGrader_1_1Signal_1a7587e2c98a88d6495f8c5228a60cbb94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a7587e2c98a88d6495f8c5228a60cbb94" kindref="member">compute_bounded_globally</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="classCPSGrader_1_1Signal_1ac64c6a467b94ace8489f9d9b8bb52237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1ac64c6a467b94ace8489f9d9b8bb52237" kindref="member">compute_timed_globally</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="classCPSGrader_1_1Signal_1a6471f9022fc9d3bef664582877427c2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a6471f9022fc9d3bef664582877427c2f" kindref="member">compute_until</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="classCPSGrader_1_1Signal_1ab1a2f149c0b6d654b2f5246ffee88ab2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1ab1a2f149c0b6d654b2f5246ffee88ab2" kindref="member">compute_timed_until</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classCPSGrader_1_1Signal_1a315a6f0fb1ca403e3276cdfffc17d83e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a315a6f0fb1ca403e3276cdfffc17d83e" kindref="member">compute_plateau_max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153" refid="classCPSGrader_1_1Signal_1a0632e80f5f42a048d1628ad9eaa15842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a0632e80f5f42a048d1628ad9eaa15842" kindref="member">compute_plateau_min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/><ref refid="namespaceCPSGrader_1ac855d9c8fe9450d4c68d66d8e3d37c04" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/zhenya/CauMon/src/include/signal.h"/>
  </compounddef>
</doxygen>
