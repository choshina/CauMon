<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tools_8cpp" kind="file" language="C++">
    <compoundname>tools.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">ctime</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">fstream</includes>
    <includes refid="tools_8h" local="yes">tools.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/zhenya/CauMon/breach/Online/src/tools.cpp</label>
        <link refid="tools_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
      </node>
      <node id="6">
        <label>ctime</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tools_8cpp_1a98b7c682bb6ace85fb747cd2f14db72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double random_double</definition>
        <argsstring>()</argsstring>
        <name>random_double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/tools.cpp" line="21" column="8" bodyfile="/home/zhenya/CauMon/breach/Online/src/tools.cpp" bodystart="21" bodyend="25"/>
        <referencedby refid="tools_8h_1a93c550e64810db4cbafd0b6cc21241bd" compoundref="tools_8cpp" startline="27" endline="41">rand_trace_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="tools_8cpp_1a93c550e64810db4cbafd0b6cc21241bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="tools_8h_1a7ecae04b84c7e90f5e3c1d31a50f0965" kindref="member">trace_data</ref></type>
        <definition>trace_data rand_trace_data</definition>
        <argsstring>(int m, int n)</argsstring>
        <name>rand_trace_data</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a m x n random trace </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/tools.cpp" line="27" column="12" bodyfile="/home/zhenya/CauMon/breach/Online/src/tools.cpp" bodystart="27" bodyend="41"/>
        <references refid="tools_8cpp_1a98b7c682bb6ace85fb747cd2f14db72b" compoundref="tools_8cpp" startline="21" endline="25">random_double</references>
        <referencedby refid="stl__monitor_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="stl__monitor_8cpp" startline="43" endline="125">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tools_8cpp_1afbc32c96ec05e616cdcccfcd9dfd401a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string current_date_time</definition>
        <argsstring>()</argsstring>
        <name>current_date_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/tools.cpp" line="43" column="19" bodyfile="/home/zhenya/CauMon/breach/Online/src/tools.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="tools_8cpp_1ace1161807bab281a440d1e9cde9ce0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const trace_data &amp;data)</argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="tools_8h_1a7ecae04b84c7e90f5e3c1d31a50f0965" kindref="member">trace_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/tools.cpp" line="53" column="6" bodyfile="/home/zhenya/CauMon/breach/Online/src/tools.cpp" bodystart="53" bodyend="64"/>
        <referencedby refid="classCPSGrader_1_1not__transducer_1ad8b680a188d24c3778b3fae50c83053b" compoundref="src_2include_2transducer_8h" startline="293" endline="295">CPSGrader::not_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1and__transducer_1ab99789887f4869208ee352b33068aa6a" compoundref="src_2include_2transducer_8h" startline="339" endline="341">CPSGrader::and_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1or__transducer_1ab4d833007a508cea6d4f4bc88c318b49" compoundref="src_2include_2transducer_8h" startline="386" endline="388">CPSGrader::or_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1implies__transducer_1af0b94311eae780939644605b0e117bcc" compoundref="src_2include_2transducer_8h" startline="423" endline="425">CPSGrader::implies_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1ev__transducer_1a278a535d133525fcba33d165fc3ec4dc" compoundref="src_2include_2transducer_8h" startline="472" endline="474">CPSGrader::ev_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1alw__transducer_1ac656e8ac765507af9e2a8bb288e770f1" compoundref="src_2include_2transducer_8h" startline="521" endline="523">CPSGrader::alw_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1until__transducer_1ac362be81ec90b69053b95c7af4453d09" compoundref="src_2include_2transducer_8h" startline="556" endline="558">CPSGrader::until_transducer::print</referencedby>
        <referencedby refid="classCPSGrader_1_1stl__atom_1ad128d183c78c4f751be831cb20380492" compoundref="src_2include_2transducer_8h" startline="638" endline="640">CPSGrader::stl_atom::print</referencedby>
      </memberdef>
      <memberdef kind="function" id="tools_8cpp_1a30c7399f7f996b4012aa69346943623d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool read_trace</definition>
        <argsstring>(const string &amp;trace_file_name, vector&lt; vector&lt; double &gt; &gt; &amp;data)</argsstring>
        <name>read_trace</name>
        <param>
          <type>const string &amp;</type>
          <declname>trace_file_name</declname>
        </param>
        <param>
          <type>vector&lt; vector&lt; double &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/tools.cpp" line="67" column="6" bodyfile="/home/zhenya/CauMon/breach/Online/src/tools.cpp" bodystart="67" bodyend="91"/>
        <referencedby refid="classCPSGrader_1_1STLDriver_1ab7da78706330f50e23ee521acf85a662" compoundref="stl__driver_8h" startline="236" endline="239">CPSGrader::STLDriver::read_trace_file</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>tools.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Mar<sp/>31,<sp/>2014</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>alex</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tools_8h" kindref="compound">tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="tools_8cpp_1a98b7c682bb6ace85fb747cd2f14db72b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="tools_8cpp_1a98b7c682bb6ace85fb747cd2f14db72b" kindref="member">random_double</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(double)rand()/(double)RAND_MAX;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="tools_8h_1a93c550e64810db4cbafd0b6cc21241bd" refkind="member"><highlight class="normal"><ref refid="tools_8h_1a7ecae04b84c7e90f5e3c1d31a50f0965" kindref="member">trace_data</ref><sp/><ref refid="tools_8cpp_1a93c550e64810db4cbafd0b6cc21241bd" kindref="member">rand_trace_data</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tools_8h_1a7ecae04b84c7e90f5e3c1d31a50f0965" kindref="member">trace_data</ref><sp/>rand_trace;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt=<sp/>0.1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>v;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(i*dt);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(<ref refid="tools_8cpp_1a98b7c682bb6ace85fb747cd2f14db72b" kindref="member">random_double</ref>());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand_trace.push_back(v);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand_trace;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="tools_8h_1afbc32c96ec05e616cdcccfcd9dfd401a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="tools_8cpp_1afbc32c96ec05e616cdcccfcd9dfd401a" kindref="member">current_date_time</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>time(0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/><sp/>tstruct;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[80];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>tstruct<sp/>=<sp/>*localtime(&amp;now);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>strftime(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d-%H-%M-%S&quot;</highlight><highlight class="normal">,<sp/>&amp;tstruct);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="tools_8h_1a218ef977b903cfd7fe7ae356affdf70a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tools_8cpp_1ace1161807bab281a440d1e9cde9ce0cc" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a7ecae04b84c7e90f5e3c1d31a50f0965" kindref="member">trace_data</ref><sp/>&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;::const_iterator<sp/>iter_value;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;&gt;::const_iterator<sp/>iter_sample;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter_sample=data.begin();iter_sample<sp/>!=<sp/>data.end();<sp/>iter_sample++)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter_value<sp/>=<sp/>iter_sample-&gt;begin();<sp/>iter_value<sp/>!=<sp/>iter_sample-&gt;end();<sp/>iter_value++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>*iter_value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="tools_8cpp_1a30c7399f7f996b4012aa69346943623d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tools_8cpp_1a30c7399f7f996b4012aa69346943623d" kindref="member">read_trace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;trace_file_name,<sp/>vector&lt;<sp/>vector&lt;double&gt;<sp/>&gt;<sp/>&amp;data)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>file;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>file.open(trace_file_name.c_str());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.is_open())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trace<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>trace_file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!std::getline(file,<sp/>line,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">).eof())<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>reader(line);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lineData;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!reader.eof())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>&gt;&gt;<sp/>val;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData.push_back(val);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(lineData);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/zhenya/CauMon/breach/Online/src/tools.cpp"/>
  </compounddef>
</doxygen>
