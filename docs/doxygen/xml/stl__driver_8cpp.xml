<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stl__driver_8cpp" kind="file" language="C++">
    <compoundname>stl_driver.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes refid="stl__driver_8h" local="yes">stl_driver.h</includes>
    <includes local="yes">transducer.h</includes>
    <includes refid="stl__scanner_8h" local="yes">stl_scanner.h</includes>
    <incdepgraph>
      <node id="17">
        <label>limits</label>
      </node>
      <node id="12">
        <label>iterator</label>
      </node>
      <node id="25">
        <label>location.hh</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="20">
        <label>tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>robustness.h</label>
        <link refid="robustness_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stdexcept</label>
      </node>
      <node id="27">
        <label>stl_scanner.h</label>
        <link refid="stl__scanner_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
      </node>
      <node id="24">
        <label>stack.hh</label>
      </node>
      <node id="15">
        <label>signal.h</label>
        <link refid="breach_2Online_2include_2signal_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>stl_parser.h</label>
        <link refid="stl__parser_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>transducer.h</label>
        <link refid="breach_2Online_2include_2transducer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>interval.h</label>
        <link refid="interval_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>transducer.h</label>
      </node>
      <node id="22">
        <label>cstdlib</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>deque</label>
      </node>
      <node id="1">
        <label>/home/zhenya/CauMon/breach/Online/src/stl_driver.cpp</label>
        <link refid="stl__driver_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>FlexLexer.h</label>
        <link refid="FlexLexer_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stl_driver.h</label>
        <link refid="stl__driver_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>mex.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceCPSGrader">CPSGrader</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>stl_driver.cpp<sp/>378<sp/>2014-04-27<sp/>17:47:40Z<sp/>donze<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stl__driver_8h" kindref="compound">stl_driver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;transducer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stl__scanner_8h" kindref="compound">stl_scanner.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCPSGrader" kindref="compound">CPSGrader</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">map&lt;string,<sp/>token_type&gt;<sp/><ref refid="classCPSGrader_1_1STLDriver_1a05e0a6403089af91626c89f08c2856aa" kindref="member">STLDriver::reserved</ref><sp/>=<sp/>map&lt;string,token_type&gt;();<sp/></highlight><highlight class="comment">//<sp/>filled<sp/>in<sp/>stl_scanner.lpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//map&lt;string,<sp/>short&gt;<sp/>transducer::signal_map<sp/>=<sp/>map&lt;string,short&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//map&lt;string,<sp/>double&gt;<sp/>transducer::param_map<sp/>=<sp/>map&lt;string,<sp/>double&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1Signal_1a2c3e801ab9e7ebab46c24fea15b791a4" kindref="member">Signal::BigM</ref><sp/>=<sp/>100.;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//vector&lt;vector&lt;double&gt;&gt;<sp/>*transducer::trace_data_ptr<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classCPSGrader_1_1STLDriver_1a3bf260079acca961e7dca236766b0d9c" refkind="member"><highlight class="normal"><ref refid="classCPSGrader_1_1STLDriver_1a3bf260079acca961e7dca236766b0d9c" kindref="member">STLDriver::STLDriver</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">:<sp/>trace_scanning(false),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>trace_parsing(false),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>lexer(nullptr),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>nb_test_total(0),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>nb_test_pos(0),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>error_flag(false)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classCPSGrader_1_1STLDriver_1a432901efc206b30abdc06054f5439044" refkind="member"><highlight class="normal"><ref refid="classCPSGrader_1_1STLDriver_1a3bf260079acca961e7dca236766b0d9c" kindref="member">STLDriver::STLDriver</ref>(<ref refid="namespaceCPSGrader_1a6dd86f7a7af0af027ce7b805037ee3c6" kindref="member">trace_data</ref><sp/>_trace)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">:<sp/>trace_scanning(false),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>trace_parsing(false),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>lexer(nullptr),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>nb_test_total(0),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>nb_test_pos(0),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>error_flag(false)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref><sp/>=<sp/>_trace;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classCPSGrader_1_1STLDriver_1a485c9c2aa2c373ef78f503565ec000de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a485c9c2aa2c373ef78f503565ec000de" kindref="member">STLDriver::parse_stream</ref>(std::istream&amp;<sp/>in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sname)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1afa9bff6c30e1abe02bd0ff67851a4c5b" kindref="member">streamname</ref><sp/>=<sp/>sname;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Scanner" kindref="compound">Scanner</ref><sp/>scanner(&amp;in);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner.<ref refid="classCPSGrader_1_1Scanner_1ac11c56d7eeb19f25a82e0858781f2e22" kindref="member">set_debug</ref>(<ref refid="classCPSGrader_1_1STLDriver_1afbbd0451deba167e618594aa2524983b" kindref="member">trace_scanning</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCPSGrader_1_1STLDriver_1a311321b00d9f6c6e5cad254ac2963779" kindref="member">lexer</ref><sp/>=<sp/>&amp;scanner;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Parser" kindref="compound">Parser</ref><sp/>parser(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.<ref refid="classCPSGrader_1_1Parser_1a3d75ecfd7b6613d53388b5ebae8c5299" kindref="member">set_debug_level</ref>(<ref refid="classCPSGrader_1_1STLDriver_1a29d73a1db5175061dad3e96f7c461ae4" kindref="member">trace_parsing</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(parser.<ref refid="classCPSGrader_1_1Parser_1a0b58cd729a4d669bdb46869509598dd0" kindref="member">parse</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classCPSGrader_1_1STLDriver_1a3c6f493723f41a94fa7cf1839663a57b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a3c6f493723f41a94fa7cf1839663a57b" kindref="member">STLDriver::parse_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>in(filename.c_str());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in.good())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a485c9c2aa2c373ef78f503565ec000de" kindref="member">parse_stream</ref>(in,<sp/>filename);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classCPSGrader_1_1STLDriver_1a0d23fc7f64a82fa33f7a9f4f42eea915" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a0d23fc7f64a82fa33f7a9f4f42eea915" kindref="member">STLDriver::parse_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sname)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(input);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a485c9c2aa2c373ef78f503565ec000de" kindref="member">parse_stream</ref>(iss,<sp/>sname);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classCPSGrader_1_1STLDriver_1aa721c96535782721c3fd44247c9d7d69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1aa721c96535782721c3fd44247c9d7d69" kindref="member">STLDriver::error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>location&amp;<sp/>l,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>m)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classCPSGrader_1_1STLDriver_1ada6099cfc5541f245ad78c86298b79d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1aa721c96535782721c3fd44247c9d7d69" kindref="member">STLDriver::error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>m)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>m<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classCPSGrader_1_1STLDriver_1a5d110de75517c0a6d6fd826ea234644c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a5d110de75517c0a6d6fd826ea234644c" kindref="member">STLDriver::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.begin();<sp/>formula<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.end();<sp/>formula++)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formula-&gt;second<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>formula-&gt;second;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula-&gt;second<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stest<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.begin();<sp/>stest<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.end();<sp/>stest++)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stest-&gt;second.formula<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>stest-&gt;second.formula;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stest-&gt;second.formula<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.clear();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1ac4656ba3552db4e7283ce669e9b0fe3e" kindref="member">param_map</ref>.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.clear();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref><sp/>*<sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a570e1aeac022cf44a69051d5cd17617c" kindref="member">get_next_formula</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(formula!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>formula;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.front().tests.pop_front();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a570e1aeac022cf44a69051d5cd17617c" kindref="member">get_next_formula</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.pop_front();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref>.clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1ae7e1c1af40ece62e9c56746fb0e0f05e" kindref="member">test_log</ref>.clear();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a5a33e100e7469b07d4c3f5caae365f41" kindref="member">error_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a864305e8288acffdca56b4cd1aab2661" kindref="member">nb_test_total</ref><sp/>=0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a94bac09b49c5458c6c604ad348d29e3d" kindref="member">nb_test_pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classCPSGrader_1_1STLDriver_1a7077b89554597149c26bf2c7040c5577" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a6f445095b8b790987c5f6099e4b8bb31" kindref="member">STLDriver::print</ref>(ostream<sp/>&amp;out)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nAssigned<sp/>formulas:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.begin();<sp/>formula<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.end();<sp/>formula++){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>formula-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*(formula-&gt;second)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nDefault<sp/>Parameters:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;---------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>param<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1ac4656ba3552db4e7283ce669e9b0fe3e" kindref="member">param_map</ref>.begin();<sp/>param<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1ac4656ba3552db4e7283ce669e9b0fe3e" kindref="member">param_map</ref>.end();<sp/>param++){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>param-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>param-&gt;second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nTrace<sp/>tests:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>endl;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;---------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>indent<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.begin();<sp/>it!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(*it).id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(*it).env<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SimTime:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).sim_time<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Visu:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).visu<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>its=<sp/><sp/>(*it).tests.begin();<sp/>its!=<sp/>(*it).tests.end();<sp/>its++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transducer-&gt;param_map<sp/>=<sp/><sp/>param_map;<sp/>FIXME<sp/>probably<sp/>needs<sp/>a<sp/>set_param<sp/>for<sp/>transducers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>its-&gt;test_id<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elem<sp/>=<sp/>its-&gt;param_map.begin();<sp/>elem<sp/>!=<sp/>its-&gt;param_map.end();<sp/>elem++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>elem-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>elem-&gt;second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/><sp/>*(*its).formula<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classCPSGrader_1_1STLDriver_1ae325bd80d9d5ba67b67dcacfdc49ab60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1ae325bd80d9d5ba67b67dcacfdc49ab60" kindref="member">STLDriver::dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//transducer::param_map<sp/>=<sp/>param_map;<sp/>FIXME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.begin();<sp/>formula<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.end();<sp/>formula++){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula-&gt;second-&gt;trace_data_ptr<sp/>=<sp/>&amp;<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula-&gt;second-&gt;init_horizon();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula-&gt;second-&gt;compute_robustness();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(formula-&gt;second-&gt;z).dumpFile(formula-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classCPSGrader_1_1STLDriver_1acebf2ba2c9d235dba1715076c3cdca3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1acebf2ba2c9d235dba1715076c3cdca3a" kindref="member">STLDriver::run_tests</ref>(){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a5a33e100e7469b07d4c3f5caae365f41" kindref="member">error_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>indent(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1stl__test" kindref="compound">stl_test</ref><sp/>*<sp/>curr_test=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a424706eee1af61404927123039591b5d" kindref="member">get_next_stl_test</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref><sp/>*<sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a570e1aeac022cf44a69051d5cd17617c" kindref="member">get_next_formula</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref>.append(</highlight><highlight class="stringliteral">&quot;stl_test<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.front().id<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>global<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//transducer-&gt;param_map<sp/>=<sp/><sp/>param_map;<sp/>FIXME<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(formula<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>local<sp/>parameters<sp/>FIXME<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(auto<sp/>elem<sp/>=<sp/>curr_test-&gt;param_map.begin();<sp/>elem<sp/>!=<sp/>curr_test-&gt;param_map.end();<sp/>elem++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>transducer-&gt;param_map[elem-&gt;first]<sp/>=<sp/>elem-&gt;second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula-&gt;<ref refid="classCPSGrader_1_1transducer_1a9e63c62dd4cb5420f57b96c1db00c915" kindref="member">trace_data_ptr</ref><sp/>=<sp/>&amp;<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula-&gt;<ref refid="classCPSGrader_1_1transducer_1a622c8f49def94baa842f203f2e3e3fe3" kindref="member">init_horizon</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rob<sp/>=<sp/>formula-&gt;<ref refid="classCPSGrader_1_1transducer_1a8fd5be58875ae2d8b4833ce81f2292d2" kindref="member">compute_robustness</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1ae7e1c1af40ece62e9c56746fb0e0f05e" kindref="member">test_log</ref>.append(curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1aa3ad7c8d74011b91e0f8f4300170016b" kindref="member">test_id</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tools_8h_1a37bd2c7d247892c6f95ece9b6a1ccfca" kindref="member">d_to_s</ref>(rob)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref>.append(indent<sp/>+<sp/>curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1aa3ad7c8d74011b91e0f8f4300170016b" kindref="member">test_id</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tools_8h_1a37bd2c7d247892c6f95ece9b6a1ccfca" kindref="member">d_to_s</ref>(rob));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rob<sp/>&gt;<sp/>0.){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a94bac09b49c5458c6c604ad348d29e3d" kindref="member">nb_test_pos</ref>++;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--&gt;<sp/>PB\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1a74c8fcade5e97fa70a5d7b90806ec211" kindref="member">report_positive</ref>.empty())</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref><sp/>+=<sp/>indent<sp/>+<sp/>curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1a74c8fcade5e97fa70a5d7b90806ec211" kindref="member">report_positive</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1a566dbffee48acc5aa506a20583792627" kindref="member">is_error</ref>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a5a33e100e7469b07d4c3f5caae365f41" kindref="member">error_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--&gt;<sp/>OK\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1a797d214fd70d46067f3a1035f31c7cca" kindref="member">report_negative</ref>.empty())</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref><sp/>+=<sp/>indent<sp/>+<sp/>curr_test-&gt;<ref refid="classCPSGrader_1_1stl__test_1a797d214fd70d46067f3a1035f31c7cca" kindref="member">report_negative</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delete<sp/>formula;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.front().tests.pop_front();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a570e1aeac022cf44a69051d5cd17617c" kindref="member">get_next_formula</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_test<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a424706eee1af61404927123039591b5d" kindref="member">get_next_stl_test</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1aff0ca71cef3238de0d6923ad68a1e4c9" kindref="member">report</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.pop_front();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a5a33e100e7469b07d4c3f5caae365f41" kindref="member">error_flag</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classCPSGrader_1_1STLDriver_1aeda46a6d84823b355d8365b7d892c5e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1aeda46a6d84823b355d8365b7d892c5e9" kindref="member">STLDriver::add_trace_test</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;test_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;trace_cfg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sim_time,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visu)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCPSGrader_1_1trace__test" kindref="compound">trace_test</ref><sp/>T;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>T.<ref refid="structCPSGrader_1_1trace__test_1a7d7d9aa6c4d188a1b02d3eed3cf187dd" kindref="member">id</ref><sp/>=<sp/>test_id;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>T.<ref refid="structCPSGrader_1_1trace__test_1a3e95349ac953b79c2b0fabae6f6f55e2" kindref="member">env</ref><sp/>=<sp/>trace_cfg;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>T.<ref refid="structCPSGrader_1_1trace__test_1ae469395113a9101953330670004d321d" kindref="member">sim_time</ref><sp/>=<sp/>sim_time;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>T.<ref refid="structCPSGrader_1_1trace__test_1a234d249f251737b324dbb7c2339b7cdc" kindref="member">visu</ref><sp/>=<sp/>visu;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.push_back(T);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classCPSGrader_1_1STLDriver_1a51cb16eb5e90463730de0b02fa7ecdb6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a51cb16eb5e90463730de0b02fa7ecdb6" kindref="member">STLDriver::add_stl_test</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>test_id)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a864305e8288acffdca56b4cd1aab2661" kindref="member">nb_test_total</ref>++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;string,<sp/>stl_test&gt;::iterator<sp/>elem;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((elem<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.find(test_id))<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.push_back(elem-&gt;second);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.back().formula<sp/>=<sp/>(elem-&gt;second).formula-&gt;clone();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.back().param_map.clear();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classCPSGrader_1_1STLDriver_1a748e25f4b562460ae04e29e90691fbef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a51cb16eb5e90463730de0b02fa7ecdb6" kindref="member">STLDriver::add_stl_test</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>test_id,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>double&gt;<sp/>&amp;local_param_map)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a864305e8288acffdca56b4cd1aab2661" kindref="member">nb_test_total</ref>++;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;string,<sp/>stl_test&gt;::iterator<sp/>elem;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((elem<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.find(test_id))<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Test<sp/>&quot;<sp/>&lt;&lt;<sp/>elem-&gt;first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!local_param_map.empty())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>with<sp/>local<sp/>param:&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>elemp<sp/>=<sp/>local_param_map.begin();<sp/>elemp<sp/>!=<sp/>local_param_map.end();<sp/>elemp++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>elemp-&gt;first<sp/>&lt;&lt;<sp/>&quot;=&quot;<sp/>&lt;&lt;<sp/><sp/>elemp-&gt;second<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.push_back(elem-&gt;second);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.back().formula<sp/>=<sp/>(elem-&gt;second).formula-&gt;clone();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.back().param_map<sp/>=<sp/>local_param_map;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classCPSGrader_1_1STLDriver_1aa6e01a40aaadba3f35e151a243f1147a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1a51cb16eb5e90463730de0b02fa7ecdb6" kindref="member">STLDriver::add_stl_test</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>test_id,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>double&gt;<sp/>&amp;local_param_map,<sp/><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref>*<sp/>formula,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;report_pos,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;report_neg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_err)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a864305e8288acffdca56b4cd1aab2661" kindref="member">nb_test_total</ref>++;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Inserting<sp/>test<sp/>&quot;<sp/>&lt;&lt;<sp/>test_id;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!local_param_map.empty())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>with<sp/>local<sp/>param:&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>elemp<sp/>=<sp/>local_param_map.begin();<sp/>elemp<sp/>!=<sp/>local_param_map.end();<sp/>elemp++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>elemp-&gt;first<sp/>&lt;&lt;<sp/>&quot;=&quot;<sp/>&lt;&lt;<sp/><sp/>elemp-&gt;second<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>[test_id]<sp/>=<sp/><ref refid="classCPSGrader_1_1stl__test" kindref="compound">stl_test</ref>(test_id,<sp/>local_param_map,<sp/>formula-&gt;<ref refid="classCPSGrader_1_1transducer_1a133c57a3bfb20aed578cc257e6e9a1eb" kindref="member">clone</ref>(),<sp/>report_pos,report_neg,<sp/>is_err);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>[test_id].param_map<sp/>=<sp/>local_param_map;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>[test_id].formula<sp/>=<sp/>formula-&gt;<ref refid="classCPSGrader_1_1transducer_1a133c57a3bfb20aed578cc257e6e9a1eb" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.push_back(<ref refid="classCPSGrader_1_1STLDriver_1a3365f2b38ac5cfb97b4c8b3395c532c3" kindref="member">stl_test_map</ref>[test_id]);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a8a2d350f2af49c065ec5eb6543d5f186" kindref="member">trace_test_queue</ref>.back().tests.back().formula<sp/>=<sp/>formula-&gt;<ref refid="classCPSGrader_1_1transducer_1a133c57a3bfb20aed578cc257e6e9a1eb" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="classCPSGrader_1_1STLDriver_1acf56675149ed2d382ff1a2b39f7cc111" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1acf56675149ed2d382ff1a2b39f7cc111" kindref="member">STLDriver::test_formula</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>phi_in)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//transducer-&gt;param_map<sp/>=<sp/>param_map;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.empty()){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>data&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>funky_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;f_u_n_k_y_p_h__i_n_a_m_e&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>seriously?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str_to_parse<sp/>=<sp/>funky_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:=&quot;</highlight><highlight class="normal"><sp/>+<sp/>phi_in;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCPSGrader_1_1STLDriver_1a0d23fc7f64a82fa33f7a9f4f42eea915" kindref="member">parse_string</ref>(str_to_parse)){</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref><sp/>*<sp/>phi<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>[funky_name]-&gt;clone();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>.erase(funky_name);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi-&gt;<ref refid="classCPSGrader_1_1transducer_1a9e63c62dd4cb5420f57b96c1db00c915" kindref="member">trace_data_ptr</ref><sp/>=<sp/>&amp;<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi-&gt;<ref refid="classCPSGrader_1_1transducer_1a622c8f49def94baa842f203f2e3e3fe3" kindref="member">init_horizon</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rob<sp/>=<sp/>phi-&gt;<ref refid="classCPSGrader_1_1transducer_1a8fd5be58875ae2d8b4833ce81f2292d2" kindref="member">compute_robustness</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rob;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>parse<sp/>formula:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi_in<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="classCPSGrader_1_1STLDriver_1a40c60ffdff5415fcb5cc02d6f2d221a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1ac6b4e429b3d33a04cb3bec7cb36b1197" kindref="member">STLDriver::print_trace</ref>(ostream<sp/>&amp;os){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.begin();<sp/>ii<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.end();<sp/>ii++){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>(*ii).begin();<sp/>jj<sp/>!=<sp/>(*ii).end();<sp/>jj++)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>*jj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="classCPSGrader_1_1STLDriver_1ac6b4e429b3d33a04cb3bec7cb36b1197" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1ac6b4e429b3d33a04cb3bec7cb36b1197" kindref="member">STLDriver::print_trace</ref>(){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver_1ac6b4e429b3d33a04cb3bec7cb36b1197" kindref="member">print_trace</ref>(cout);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classCPSGrader_1_1STLDriver_1acd069522588e1e5aacfde9d66bf4d4d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1acd069522588e1e5aacfde9d66bf4d4d7" kindref="member">STLDriver::dump_trace_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>filename){</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>fstream<sp/>ofs;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>ofs.open(filename.c_str(),<sp/>std::ofstream::out);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ofs.is_open())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/><ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.begin();<sp/>ii<sp/>!=<sp/><ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.end();<sp/>ii++){</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>(*ii).begin();<sp/>jj<sp/>!=<sp/>(*ii).end();<sp/>jj++)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>*jj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs.close();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename.c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>writing<sp/>signal&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>implement<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classCPSGrader_1_1STLDriver_1ad05bb1e3da49d92bc26ac5aabf30547b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver_1ad05bb1e3da49d92bc26ac5aabf30547b" kindref="member">STLDriver::dump_test_log_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>filename){</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>fstream<sp/>ofs;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ofs.open(filename.c_str(),<sp/>std::ofstream::out);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ofs.is_open())<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/><ref refid="classCPSGrader_1_1STLDriver_1ae7e1c1af40ece62e9c56746fb0e0f05e" kindref="member">test_log</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>positive<sp/>STL<sp/>tests:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCPSGrader_1_1STLDriver_1a94bac09b49c5458c6c604ad348d29e3d" kindref="member">nb_test_pos</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCPSGrader_1_1STLDriver_1a864305e8288acffdca56b4cd1aab2661" kindref="member">nb_test_total</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs.close();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename.c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>writing<sp/>signal&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>implement<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CPSGrader</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/zhenya/CauMon/breach/Online/src/stl_driver.cpp"/>
  </compounddef>
</doxygen>
