<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classCPSGrader_1_1and__transducer" kind="class" language="C++" prot="public">
    <compoundname>CPSGrader::and_transducer</compoundname>
    <basecompoundref refid="classCPSGrader_1_1binary__transducer" prot="public" virt="non-virtual">CPSGrader::binary_transducer</basecompoundref>
    <includes refid="transducer_8h" local="no">transducer.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classCPSGrader_1_1and__transducer_1adc1a6711c66ba27f30a98501a45c0940" prot="public" static="no" mutable="no">
        <type><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref></type>
        <definition>Signal CPSGrader::and_transducer::cau_lowL</definition>
        <argsstring></argsstring>
        <name>cau_lowL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="307" column="16" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="307" bodyend="-1"/>
        <referencedby refid="classCPSGrader_1_1and__transducer_1abc533032d862ed939073547b00d1ec6b" compoundref="cau__interval__transducer_8cpp" startline="41" endline="65">causation_opt_lower</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCPSGrader_1_1and__transducer_1ad4bd4c0329cb3a9c6fefefa11365526a" prot="public" static="no" mutable="no">
        <type><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref></type>
        <definition>Signal CPSGrader::and_transducer::cau_lowR</definition>
        <argsstring></argsstring>
        <name>cau_lowR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="307" column="25" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="307" bodyend="-1"/>
        <referencedby refid="classCPSGrader_1_1and__transducer_1abc533032d862ed939073547b00d1ec6b" compoundref="cau__interval__transducer_8cpp" startline="41" endline="65">causation_opt_lower</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1a0a444bfb2f55dfcdd5e81202aaeff0fc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CPSGrader::and_transducer::and_transducer</definition>
        <argsstring>(transducer *_childL, transducer *_childR)</argsstring>
        <name>and_transducer</name>
        <param>
          <type><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref> *</type>
          <declname>_childL</declname>
        </param>
        <param>
          <type><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref> *</type>
          <declname>_childR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="309" column="18" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1a8018f1804532550928f4af741805a864" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classCPSGrader_1_1and__transducer" kindref="compound">and_transducer</ref> *</type>
        <definition>virtual and_transducer* CPSGrader::and_transducer::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a133c57a3bfb20aed578cc257e6e9a1eb">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="314" column="32" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="314" bodyend="318"/>
        <references refid="classCPSGrader_1_1transducer_1a133c57a3bfb20aed578cc257e6e9a1eb">CPSGrader::transducer::clone</references>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1a13ab95b860eac871e2aafd09186b1540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CPSGrader::and_transducer::~and_transducer</definition>
        <argsstring>()</argsstring>
        <name>~and_transducer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="320" column="17" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="320" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1ac040664936bde8364658ef84e6e0623f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CPSGrader::and_transducer::compute_robustness</definition>
        <argsstring>()</argsstring>
        <name>compute_robustness</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a8fd5be58875ae2d8b4833ce81f2292d2">compute_robustness</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="323" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1ad96214ba16a576ef6c9e97ce9cabf12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CPSGrader::and_transducer::compute_lower_rob</definition>
        <argsstring>()</argsstring>
        <name>compute_lower_rob</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a9a26566ad23cc15eef63d00d32ab7b3d">compute_lower_rob</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="325" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1a55f03a35673a0ece5c32892b713e7248" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CPSGrader::and_transducer::compute_upper_rob</definition>
        <argsstring>()</argsstring>
        <name>compute_upper_rob</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a0ba9bc26599dd484cfc940991032ddd3">compute_upper_rob</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="327" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1a353ab9eb8c960432e090d3311add48d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CPSGrader::and_transducer::causation_opt_upper</definition>
        <argsstring>()</argsstring>
        <name>causation_opt_upper</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a580d043d7f72bc1bf882be8a760339a9">causation_opt_upper</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the upper bound causation optimization for AND transducer. This method evaluates the causation optimization by computing the upper bound for both child transducers and combining them using AND logic.</para>
<para><simplesect kind="return"><para>The upper bound causation value for the AND operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="329" column="16" bodyfile="/home/zhenya/CauMon/src/cpp/cau_interval_transducer.cpp" bodystart="15" bodyend="31"/>
        <references refid="classCPSGrader_1_1Signal_1a9fe5b10a6b4e1b78c3834ce382fe7c66" compoundref="signal_8cpp" startline="42" endline="56">CPSGrader::Signal::appendSample</references>
        <references refid="classCPSGrader_1_1transducer_1a97f330b1082c802ee8c0f91f05e38a04" compoundref="transducer_8h" startline="39">CPSGrader::transducer::cau_up</references>
        <references refid="classCPSGrader_1_1transducer_1a580d043d7f72bc1bf882be8a760339a9" compoundref="transducer_8h" startline="67" endline="67">CPSGrader::transducer::causation_opt_upper</references>
        <references refid="classCPSGrader_1_1binary__transducer_1a91a8dc3f455cd255603ebc5dff915420" compoundref="transducer_8h" startline="189">CPSGrader::binary_transducer::childL</references>
        <references refid="classCPSGrader_1_1binary__transducer_1a24ec331175dfc3ac9ebcc52de4a0e9f0" compoundref="transducer_8h" startline="192">CPSGrader::binary_transducer::childR</references>
        <references refid="classCPSGrader_1_1Signal_1ad9c41b0c809777ee373043395abd0229">CPSGrader::Signal::compute_and</references>
        <references refid="classCPSGrader_1_1Signal_1ad6422301194605a5a29f5ffb98d79c79" compoundref="signal_8h" startline="79">CPSGrader::Signal::endTime</references>
        <references refid="classCPSGrader_1_1Signal_1a85f1f65f2bbe0f80959149d18c76691b" compoundref="signal_8cpp" startline="99" endline="161">CPSGrader::Signal::resize</references>
        <references refid="classCPSGrader_1_1transducer_1a2a61a77c701815ecbeb79940f057c719" compoundref="transducer_8h" startline="33">CPSGrader::transducer::start_time</references>
        <references refid="signal_8h_1afc0eef637f1016e8786e45e106a4881e" compoundref="signal_8h" startline="13">TOP</references>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1abc533032d862ed939073547b00d1ec6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CPSGrader::and_transducer::causation_opt_lower</definition>
        <argsstring>()</argsstring>
        <name>causation_opt_lower</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a9441f8958d69ae3896d531d36e216f20">causation_opt_lower</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the lower bound causation optimization for AND transducer. This method evaluates the causation optimization by computing the lower bound for both child transducers and combining them using AND logic. The result is the maximum of two possible combinations to ensure soundness.</para>
<para><simplesect kind="return"><para>The lower bound causation value for the AND operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="330" column="16" bodyfile="/home/zhenya/CauMon/src/cpp/cau_interval_transducer.cpp" bodystart="41" bodyend="65"/>
        <references refid="classCPSGrader_1_1Signal_1a9fe5b10a6b4e1b78c3834ce382fe7c66" compoundref="signal_8cpp" startline="42" endline="56">CPSGrader::Signal::appendSample</references>
        <references refid="signal_8h_1ae420caa0af9cbdf102ed255034e27c5b" compoundref="signal_8h" startline="12">BOTTOM</references>
        <references refid="classCPSGrader_1_1transducer_1af32119bba8da81be20c7097eb0d44ee8" compoundref="transducer_8h" startline="39">CPSGrader::transducer::cau_low</references>
        <references refid="classCPSGrader_1_1and__transducer_1adc1a6711c66ba27f30a98501a45c0940" compoundref="transducer_8h" startline="307">cau_lowL</references>
        <references refid="classCPSGrader_1_1and__transducer_1ad4bd4c0329cb3a9c6fefefa11365526a" compoundref="transducer_8h" startline="307">cau_lowR</references>
        <references refid="classCPSGrader_1_1transducer_1a9441f8958d69ae3896d531d36e216f20" compoundref="transducer_8h" startline="68" endline="68">CPSGrader::transducer::causation_opt_lower</references>
        <references refid="classCPSGrader_1_1binary__transducer_1a91a8dc3f455cd255603ebc5dff915420" compoundref="transducer_8h" startline="189">CPSGrader::binary_transducer::childL</references>
        <references refid="classCPSGrader_1_1binary__transducer_1a24ec331175dfc3ac9ebcc52de4a0e9f0" compoundref="transducer_8h" startline="192">CPSGrader::binary_transducer::childR</references>
        <references refid="classCPSGrader_1_1Signal_1ad9c41b0c809777ee373043395abd0229">CPSGrader::Signal::compute_and</references>
        <references refid="classCPSGrader_1_1transducer_1a9a26566ad23cc15eef63d00d32ab7b3d">CPSGrader::transducer::compute_lower_rob</references>
        <references refid="classCPSGrader_1_1Signal_1a8036a76497fc32e81ef3b2d6edd52767">CPSGrader::Signal::compute_or</references>
        <references refid="classCPSGrader_1_1Signal_1ad6422301194605a5a29f5ffb98d79c79" compoundref="signal_8h" startline="79">CPSGrader::Signal::endTime</references>
        <references refid="classCPSGrader_1_1Signal_1a85f1f65f2bbe0f80959149d18c76691b" compoundref="signal_8cpp" startline="99" endline="161">CPSGrader::Signal::resize</references>
        <references refid="classCPSGrader_1_1transducer_1a2a61a77c701815ecbeb79940f057c719" compoundref="transducer_8h" startline="33">CPSGrader::transducer::start_time</references>
        <references refid="classCPSGrader_1_1transducer_1aa9679dc8f88998242eefd789edef178d" compoundref="transducer_8h" startline="36">CPSGrader::transducer::z_low</references>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1aab9e33c46ca5d0e7af460be14574fe18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CPSGrader::and_transducer::set_duration</definition>
        <argsstring>()</argsstring>
        <name>set_duration</name>
        <reimplements refid="classCPSGrader_1_1transducer_1afd33961aef44e5b79d2e0a1d0c0ea1e9">set_duration</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="332" column="14" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="332" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1ab99789887f4869208ee352b33068aa6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CPSGrader::and_transducer::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <reimplements refid="classCPSGrader_1_1transducer_1ac1665122ed56e168e6339bacd8cabaab">print</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="339" column="14" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="339" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classCPSGrader_1_1and__transducer_1a21f7b5f3487ef6f686dc530f4d9ac24f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CPSGrader::and_transducer::print</definition>
        <argsstring>(ostream &amp;os) const</argsstring>
        <name>print</name>
        <reimplements refid="classCPSGrader_1_1transducer_1a4ff17ad837da12a39c76ce94828da5f1">print</reimplements>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/src/include/transducer.h" line="343" column="22" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="343" bodyend="347"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CPSGrader::binary_transducer</label>
        <link refid="classCPSGrader_1_1binary__transducer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CPSGrader::and_transducer</label>
        <link refid="classCPSGrader_1_1and__transducer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CPSGrader::transducer</label>
        <link refid="classCPSGrader_1_1transducer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CPSGrader::binary_transducer</label>
        <link refid="classCPSGrader_1_1binary__transducer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>childL</edgelabel>
          <edgelabel>childR</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>CPSGrader::Signal</label>
        <link refid="classCPSGrader_1_1Signal"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CPSGrader::and_transducer</label>
        <link refid="classCPSGrader_1_1and__transducer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cau_lowL</edgelabel>
          <edgelabel>cau_lowR</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CPSGrader::transducer</label>
        <link refid="classCPSGrader_1_1transducer"/>
        <childnode refid="4" relation="usage">
          <edgelabel>cau</edgelabel>
          <edgelabel>cau_low</edgelabel>
          <edgelabel>cau_up</edgelabel>
          <edgelabel>z</edgelabel>
          <edgelabel>z_low</edgelabel>
          <edgelabel>z_up</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::deque&lt; Sample &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/zhenya/CauMon/src/include/transducer.h" line="305" column="5" bodyfile="/home/zhenya/CauMon/src/include/transducer.h" bodystart="305" bodyend="350"/>
    <listofallmembers>
      <member refid="classCPSGrader_1_1and__transducer_1a0a444bfb2f55dfcdd5e81202aaeff0fc" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>and_transducer</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1ab760baef6214f19938b037ba3264cc38" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>binary_transducer</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1a23eeb1ef9cb3b723d0a1eb791f0d9a3e" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>binary_transducer</name></member>
      <member refid="classCPSGrader_1_1transducer_1a9f6ac3139fd75fe07f2a88d5a862336f" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>cau</name></member>
      <member refid="classCPSGrader_1_1transducer_1af32119bba8da81be20c7097eb0d44ee8" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>cau_low</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1adc1a6711c66ba27f30a98501a45c0940" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>cau_lowL</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1ad4bd4c0329cb3a9c6fefefa11365526a" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>cau_lowR</name></member>
      <member refid="classCPSGrader_1_1transducer_1a97f330b1082c802ee8c0f91f05e38a04" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>cau_up</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1abc533032d862ed939073547b00d1ec6b" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>causation_opt_lower</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1a353ab9eb8c960432e090d3311add48d6" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>causation_opt_upper</name></member>
      <member refid="classCPSGrader_1_1transducer_1afda50b237d883aabb8f2fdb50304d3d3" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>check</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1a91a8dc3f455cd255603ebc5dff915420" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>childL</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1a24ec331175dfc3ac9ebcc52de4a0e9f0" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>childR</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1a8018f1804532550928f4af741805a864" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>clone</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1ad96214ba16a576ef6c9e97ce9cabf12a" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>compute_lower_rob</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1ac040664936bde8364658ef84e6e0623f" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>compute_robustness</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1a55f03a35673a0ece5c32892b713e7248" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>compute_upper_rob</name></member>
      <member refid="classCPSGrader_1_1transducer_1af15f10dcbc6f35064a4d8ce25ef855a7" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>double_equals</name></member>
      <member refid="classCPSGrader_1_1transducer_1afa124c5eeeb60ef54b5ecf3ee9856060" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>double_ge</name></member>
      <member refid="classCPSGrader_1_1transducer_1aadf8c1c8bc2ddc24bc996febf134848f" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>double_greater</name></member>
      <member refid="classCPSGrader_1_1transducer_1ae8e24fd7bd1e091da7a62ab44cb2e6a9" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>double_le</name></member>
      <member refid="classCPSGrader_1_1transducer_1a9059b109c683f46e74840227e728e69b" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>double_less</name></member>
      <member refid="classCPSGrader_1_1transducer_1a47a0c014534eb3b8e16008e9307bf5a4" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>duration</name></member>
      <member refid="classCPSGrader_1_1transducer_1ae74d40c958360d5cb5190ad87746c864" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>end_time</name></member>
      <member refid="classCPSGrader_1_1transducer_1abf4f77d90d735e4e1285671004d0678f" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>get_end_complete</name></member>
      <member refid="classCPSGrader_1_1transducer_1a82ee61d4f1f4d031560b1d47bd5d204e" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>get_end_complete_low</name></member>
      <member refid="classCPSGrader_1_1transducer_1ad1e1aa2ecd040c6872c97c4c58c3138d" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>get_end_complete_up</name></member>
      <member refid="classCPSGrader_1_1transducer_1abb46a9df698d45369da35bf36bfd332b" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>get_index</name></member>
      <member refid="classCPSGrader_1_1transducer_1a02d1100175307731b91b1f56b750773b" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>get_param</name></member>
      <member refid="classCPSGrader_1_1transducer_1ae962b60ecb6c6540a847852abb1d24a0" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>get_signal</name></member>
      <member refid="classCPSGrader_1_1transducer_1ada0ba16064c6d55460c0f1013f3c7d34" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>get_value</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1a06ebd5c7e81a0662e8f05954aa68f95c" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>init_horizon</name></member>
      <member refid="classCPSGrader_1_1transducer_1abea4edf32ff21d1368231821a847772d" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>param_map</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1ab99789887f4869208ee352b33068aa6a" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>print</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1a21f7b5f3487ef6f686dc530f4d9ac24f" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>print</name></member>
      <member refid="classCPSGrader_1_1transducer_1ac4e59f29cbd68e4eef9c88b6962b6985" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>print_trace</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1aab9e33c46ca5d0e7af460be14574fe18" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>set_duration</name></member>
      <member refid="classCPSGrader_1_1transducer_1a2ca92d6e33f6f7eb40285c9d56b719a8" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>set_horizon</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1ad48ba1d57e636578c26cdb60ab9a89c4" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>set_trace_data_ptr</name></member>
      <member refid="classCPSGrader_1_1transducer_1ad33b191ced4cb7f27f1d86ab7f0171b4" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>signal_map</name></member>
      <member refid="classCPSGrader_1_1transducer_1a2a61a77c701815ecbeb79940f057c719" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>start_time</name></member>
      <member refid="classCPSGrader_1_1transducer_1ad73ab081ffe1977ad0f7abb989d2a4da" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>trace_data_ptr</name></member>
      <member refid="classCPSGrader_1_1transducer_1a041512f31a264c8aabcfdd21f39556dd" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>transducer</name></member>
      <member refid="classCPSGrader_1_1transducer_1ab86d39d2cb1d51095e3c9a4cf550fdbd" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>update_lower_rob</name></member>
      <member refid="classCPSGrader_1_1transducer_1a1a40d987cdcecac224090c6a863e03bf" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>update_robustness</name></member>
      <member refid="classCPSGrader_1_1transducer_1aa9a99c53e24002cddc81db96a6d1db94" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>update_upper_rob</name></member>
      <member refid="classCPSGrader_1_1transducer_1a5112602e45c5f167fb87211206813b45" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>z</name></member>
      <member refid="classCPSGrader_1_1transducer_1aa9679dc8f88998242eefd789edef178d" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>z_low</name></member>
      <member refid="classCPSGrader_1_1transducer_1a7983863530e0de4335d461cd00a54e7f" prot="public" virt="non-virtual"><scope>CPSGrader::and_transducer</scope><name>z_up</name></member>
      <member refid="classCPSGrader_1_1and__transducer_1a13ab95b860eac871e2aafd09186b1540" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>~and_transducer</name></member>
      <member refid="classCPSGrader_1_1binary__transducer_1a3927bd42aadcf7f4f216ca33f7d31e46" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>~binary_transducer</name></member>
      <member refid="classCPSGrader_1_1transducer_1a366d5b3632892ffe177b1d7134637c40" prot="public" virt="virtual"><scope>CPSGrader::and_transducer</scope><name>~transducer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
