<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="onlineMonitorWrapper_8cpp" kind="file" language="C++">
    <compoundname>onlineMonitorWrapper.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes refid="stl__driver_8h" local="yes">stl_driver.h</includes>
    <includes local="yes">simstruc.h</includes>
    <includes local="yes">cg_sfun.h</includes>
    <incdepgraph>
      <node id="25">
        <label>simstruc.h</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="11">
        <label>iterator</label>
      </node>
      <node id="24">
        <label>location.hh</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="19">
        <label>tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>robustness.h</label>
        <link refid="robustness_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stdexcept</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="26">
        <label>cg_sfun.h</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="15">
        <label>fstream</label>
      </node>
      <node id="23">
        <label>stack.hh</label>
      </node>
      <node id="14">
        <label>signal.h</label>
        <link refid="breach_2Online_2include_2signal_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp</label>
        <link refid="onlineMonitorWrapper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="20">
        <label>stl_parser.h</label>
        <link refid="stl__parser_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>transducer.h</label>
        <link refid="breach_2Online_2include_2transducer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>interval.h</label>
        <link refid="interval_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>deque</label>
      </node>
      <node id="5">
        <label>stl_driver.h</label>
        <link refid="stl__driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>mex.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a9a4ab27953070e39249f3fad28e93749" prot="public" static="no">
        <name>S_FUNCTION_LEVEL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="6" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a0f61df833e166c743295eebf43f0b142" prot="public" static="no">
        <name>S_FUNCTION_NAME</name>
        <initializer>onlineMonitorWrapper</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="7" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" prot="public" static="no">
        <name>SIG_IDX</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="13" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" prot="public" static="no">
        <name>STL_IDX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="14" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" prot="public" static="no">
        <name>MAX_ROB_IDX</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="15" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" prot="public" static="no">
        <name>REFRESH_IDX</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="16" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a86c602691f44bb031f6a90422715a525" prot="public" static="no">
        <name>SIGNAL_STRING</name>
        <param><defname>S</defname></param>
        <initializer>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="18" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a167ae71e1124a616d9f5b31deb4115ad" prot="public" static="no">
        <name>STL_STRING</name>
        <param><defname>S</defname></param>
        <initializer>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="19" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a3101c2943eb48b232d8c727de0e1c1f8" prot="public" static="no">
        <name>MAX_ROB</name>
        <param><defname>S</defname></param>
        <initializer>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="20" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a1e2601b901f54b2a3bb78a8b889b3ca8" prot="public" static="no">
        <name>REFRESH_RATE</name>
        <param><defname>S</defname></param>
        <initializer>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="21" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1ae468832efa6adf5e9a96cabd8f878b47" prot="public" static="no">
        <name>NPARAMS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="23" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1acd0a37388395174a7c197805a76a4ddb" prot="public" static="no">
        <name>NOUTPORT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="25" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" prot="public" static="no">
        <name>UP_IDX</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="26" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" prot="public" static="no">
        <name>LOW_IDX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="27" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a4936bd489281a5a9b9a2e081de0f003e" prot="public" static="no">
        <name>MDL_CHECK_PARAMETERS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="50" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a12be303c445022c9cfb5a1c7afa4fb1c" prot="public" static="no">
        <name>MDL_INITIALIZE_CONDITIONS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="196" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1ac032abbf580c891fb0c11e63e9bc668a" prot="public" static="no">
        <name>MDL_START</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="232" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="onlineMonitorWrapper_8cpp_1a7556dbbf5cb7f9946d3e39bcda40c63b" prot="public" static="no">
        <name>MDL_UPDATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="251" column="9" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1ab500fc17ae5e95797926ac770d903b84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlInitializeSizes</definition>
        <argsstring>(SimStruct *S)</argsstring>
        <name>mdlInitializeSizes</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="123" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="123" bodyend="163"/>
        <references refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" compoundref="onlineMonitorWrapper_8cpp" startline="15">MAX_ROB_IDX</references>
        <references refid="onlineMonitorWrapper_8cpp_1acd0a37388395174a7c197805a76a4ddb" compoundref="onlineMonitorWrapper_8cpp" startline="25">NOUTPORT</references>
        <references refid="onlineMonitorWrapper_8cpp_1ae468832efa6adf5e9a96cabd8f878b47" compoundref="onlineMonitorWrapper_8cpp" startline="23">NPARAMS</references>
        <references refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" compoundref="onlineMonitorWrapper_8cpp" startline="16">REFRESH_IDX</references>
        <references refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" compoundref="onlineMonitorWrapper_8cpp" startline="13">SIG_IDX</references>
        <references refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" compoundref="onlineMonitorWrapper_8cpp" startline="14">STL_IDX</references>
      </memberdef>
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1a2d673fc64bb19bb80be024c2e1e6d5b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlInitializeConditions</definition>
        <argsstring>(SimStruct *S)</argsstring>
        <name>mdlInitializeConditions</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="201" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="201" bodyend="209"/>
        <references refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" compoundref="onlineMonitorWrapper_8cpp" startline="27">LOW_IDX</references>
        <references refid="onlineMonitorWrapper_8cpp_1a3101c2943eb48b232d8c727de0e1c1f8" compoundref="onlineMonitorWrapper_8cpp" startline="20">MAX_ROB</references>
        <references refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" compoundref="onlineMonitorWrapper_8cpp" startline="26">UP_IDX</references>
      </memberdef>
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1a4308a5a20d9c7060391059b1dfce872e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlInitializeSampleTimes</definition>
        <argsstring>(SimStruct *S)</argsstring>
        <name>mdlInitializeSampleTimes</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="217" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="217" bodyend="225"/>
        <references refid="onlineMonitorWrapper_8cpp_1a1e2601b901f54b2a3bb78a8b889b3ca8" compoundref="onlineMonitorWrapper_8cpp" startline="21">REFRESH_RATE</references>
      </memberdef>
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1a0dd07daf338cf84d1aee4bb8b6771720" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlStart</definition>
        <argsstring>(SimStruct *S)</argsstring>
        <name>mdlStart</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="233" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="233" bodyend="249"/>
        <references refid="classCPSGrader_1_1STLDriver_1a0d23fc7f64a82fa33f7a9f4f42eea915" compoundref="stl__driver_8cpp" startline="67" endline="71">CPSGrader::STLDriver::parse_string</references>
        <references refid="onlineMonitorWrapper_8cpp_1a86c602691f44bb031f6a90422715a525" compoundref="onlineMonitorWrapper_8cpp" startline="18">SIGNAL_STRING</references>
        <references refid="onlineMonitorWrapper_8cpp_1a167ae71e1124a616d9f5b31deb4115ad" compoundref="onlineMonitorWrapper_8cpp" startline="19">STL_STRING</references>
      </memberdef>
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1a90b55be5367122a2cb94e9ac87253228" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlUpdate</definition>
        <argsstring>(SimStruct *S, int_T tid)</argsstring>
        <name>mdlUpdate</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int_T</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="252" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="252" bodyend="294"/>
        <references refid="src_2include_2signal_8h_1ae420caa0af9cbdf102ed255034e27c5b" compoundref="src_2include_2signal_8h" startline="12">BOTTOM</references>
        <references refid="classCPSGrader_1_1transducer_1a341385fcb12299bbf8252ab355bd0198" compoundref="interval__transducer_8cpp" startline="12" endline="26">CPSGrader::transducer::compute_lower_rob</references>
        <references refid="classCPSGrader_1_1transducer_1a2b52cb7bb8b43d673e40620b96b2bec5" compoundref="interval__transducer_8cpp" startline="28" endline="42">CPSGrader::transducer::compute_upper_rob</references>
        <references refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" compoundref="stl__driver_8h" startline="97">CPSGrader::STLDriver::data</references>
        <references refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" compoundref="stl__driver_8h" startline="91">CPSGrader::STLDriver::formula_map</references>
        <references refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" compoundref="onlineMonitorWrapper_8cpp" startline="27">LOW_IDX</references>
        <references refid="onlineMonitorWrapper_8cpp_1a3101c2943eb48b232d8c727de0e1c1f8" compoundref="onlineMonitorWrapper_8cpp" startline="20">MAX_ROB</references>
        <references refid="classCPSGrader_1_1transducer_1a387f7e246ca12a83ed2c4c3edc95c419" compoundref="src_2include_2transducer_8h" startline="63" endline="65">CPSGrader::transducer::set_trace_data_ptr</references>
        <references refid="src_2include_2signal_8h_1afc0eef637f1016e8786e45e106a4881e" compoundref="src_2include_2signal_8h" startline="13">TOP</references>
        <references refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" compoundref="onlineMonitorWrapper_8cpp" startline="26">UP_IDX</references>
      </memberdef>
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1ab6c8c16502dd4374f9f36cfd58cbbd15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlOutputs</definition>
        <argsstring>(SimStruct *S, int_T tid)</argsstring>
        <name>mdlOutputs</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int_T</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="301" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="301" bodyend="310"/>
        <references refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" compoundref="onlineMonitorWrapper_8cpp" startline="27">LOW_IDX</references>
        <references refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" compoundref="onlineMonitorWrapper_8cpp" startline="26">UP_IDX</references>
      </memberdef>
      <memberdef kind="function" id="onlineMonitorWrapper_8cpp_1a343acfd8b3b5308d6c94bbf40efbbac5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mdlTerminate</definition>
        <argsstring>(SimStruct *S)</argsstring>
        <name>mdlTerminate</name>
        <param>
          <type>SimStruct *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" line="318" column="13" bodyfile="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp" bodystart="318" bodyend="323"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stl__driver_8h" kindref="compound">stl_driver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="onlineMonitorWrapper_8cpp_1a9a4ab27953070e39249f3fad28e93749" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_FUNCTION_LEVEL<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="onlineMonitorWrapper_8cpp_1a0f61df833e166c743295eebf43f0b142" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_FUNCTION_NAME<sp/><sp/>onlineMonitorWrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>include<sp/>simstruc.h<sp/>for<sp/>the<sp/>definition<sp/>of<sp/>the<sp/>SimStruct<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>associated<sp/>macro<sp/>definitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simstruc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIG_IDX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STL_IDX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ROB_IDX<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFRESH_IDX<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="onlineMonitorWrapper_8cpp_1a86c602691f44bb031f6a90422715a525" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIGNAL_STRING(S)<sp/>ssGetSFcnParam(S,SIG_IDX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="onlineMonitorWrapper_8cpp_1a167ae71e1124a616d9f5b31deb4115ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STL_STRING(S)<sp/><sp/><sp/><sp/>ssGetSFcnParam(S,STL_IDX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="onlineMonitorWrapper_8cpp_1a3101c2943eb48b232d8c727de0e1c1f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ROB(S)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssGetSFcnParam(S,MAX_ROB_IDX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="onlineMonitorWrapper_8cpp_1a1e2601b901f54b2a3bb78a8b889b3ca8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFRESH_RATE(S)<sp/><sp/>ssGetSFcnParam(S,REFRESH_IDX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="onlineMonitorWrapper_8cpp_1ae468832efa6adf5e9a96cabd8f878b47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NPARAMS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="onlineMonitorWrapper_8cpp_1acd0a37388395174a7c197805a76a4ddb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NOUTPORT<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UP_IDX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW_IDX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(MATLAB_MEX_FILE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>cannot<sp/>be<sp/>used<sp/>directly<sp/>with<sp/>the<sp/>Real-Time<sp/>Workshop.<sp/>However,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>this<sp/>S-function<sp/>does<sp/>work<sp/>with<sp/>the<sp/>Real-Time<sp/>Workshop<sp/>via</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>the<sp/>Target<sp/>Language<sp/>Compiler<sp/>technology.<sp/>See</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>matlabroot/toolbox/simulink/blocks/tlc_c/sfun_multiport.tlc</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>C<sp/>version</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>matlabroot/toolbox/simulink/blocks/tlc_ada/sfun_multiport.tlc</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>Ada<sp/>version</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>This_file_can_be_used_only_during_simulation_inside_Simulink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCPSGrader" kindref="compound">CPSGrader</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*====================*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>S-function<sp/>methods<sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="onlineMonitorWrapper_8cpp_1a4936bd489281a5a9b9a2e081de0f003e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MDL_CHECK_PARAMETERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MDL_CHECK_PARAMETERS)<sp/>&amp;&amp;<sp/>defined(MATLAB_MEX_FILE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function:<sp/>mdlCheckParameters<sp/>=============================================</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Abstract:</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Validate<sp/>our<sp/>parameters<sp/>to<sp/>verify<sp/>they<sp/>are<sp/>okay.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mdlCheckParameters(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mxIsEmpty(<sp/><sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsSparse(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsComplex(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsLogical(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsNumeric(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsDouble(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!mxIsChar(<sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssSetErrorStatus(S,</highlight><highlight class="stringliteral">&quot;Parameter<sp/>signal<sp/>names<sp/>must<sp/>be<sp/>a<sp/>string.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mxIsEmpty(<sp/><sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsSparse(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsComplex(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsLogical(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsNumeric(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsDouble(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!mxIsChar(<sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssSetErrorStatus(S,</highlight><highlight class="stringliteral">&quot;Parameter<sp/>formula<sp/>must<sp/>be<sp/>a<sp/>string.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mxIsEmpty(<sp/><sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsSparse(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsComplex(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsLogical(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!mxIsNumeric(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!mxIsDouble(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsChar(<sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssSetErrorStatus(S,</highlight><highlight class="stringliteral">&quot;Parameter<sp/>max.<sp/>robustness<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>double.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mxIsEmpty(<sp/><sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsSparse(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsComplex(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsLogical(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!mxIsNumeric(<sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!mxIsDouble(<sp/><sp/><sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>))<sp/>||</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxIsChar(<sp/>ssGetSFcnParam(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssSetErrorStatus(S,</highlight><highlight class="stringliteral">&quot;Parameter<sp/>refresh<sp/>rate<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>double.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signal_buf<sp/>=<sp/>mxArrayToString(<ref refid="onlineMonitorWrapper_8cpp_1a86c602691f44bb031f6a90422715a525" kindref="member">SIGNAL_STRING</ref>(S));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stl_buf<sp/>=<sp/>mxArrayToString(<ref refid="onlineMonitorWrapper_8cpp_1a167ae71e1124a616d9f5b31deb4115ad" kindref="member">STL_STRING</ref>(S));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>phi_st<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>&quot;</highlight><highlight class="normal">+<sp/>string(signal_buf)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;phi:=&quot;</highlight><highlight class="normal"><sp/>+<sp/>string(stl_buf);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>mxFree(signal_buf);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>mxFree(stl_buf);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref><sp/>*stl_driver<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parse_success<sp/>=<sp/>stl_driver-&gt;<ref refid="classCPSGrader_1_1STLDriver_1a0d23fc7f64a82fa33f7a9f4f42eea915" kindref="member">parse_string</ref>(phi_st);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parse_success==0)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssSetErrorStatus(S,</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>parsing<sp/>STL<sp/>Formula.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>stl_driver;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MDL_CHECK_PARAMETERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function:<sp/>mdlInitializeSizes<sp/>===============================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Abstract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>The<sp/>sizes<sp/>information<sp/>is<sp/>used<sp/>by<sp/>Simulink<sp/>to<sp/>determine<sp/>the<sp/>S-function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>block&apos;s<sp/>characteristics<sp/>(number<sp/>of<sp/>inputs,<sp/>outputs,<sp/>states,<sp/>etc.).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="onlineMonitorWrapper_8cpp_1ab500fc17ae5e95797926ac770d903b84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1ab500fc17ae5e95797926ac770d903b84" kindref="member">mdlInitializeSizes</ref>(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>number<sp/>of<sp/>expected<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetNumSFcnParams(S,<sp/><ref refid="onlineMonitorWrapper_8cpp_1ae468832efa6adf5e9a96cabd8f878b47" kindref="member">NPARAMS</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>mismatch<sp/>will<sp/>be<sp/>reported<sp/>by<sp/>Simulink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssGetNumSFcnParams(S)<sp/>!=<sp/>ssGetSFcnParamsCount(S))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetNumDiscStates(S,<sp/>2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>mdlCheckParameters(S);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssGetErrorStatus(S)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetSFcnParamTunable(S,<ref refid="onlineMonitorWrapper_8cpp_1a0f6f603b21e14a3a4cb865f738ea6c5b" kindref="member">STL_IDX</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetSFcnParamTunable(S,<ref refid="onlineMonitorWrapper_8cpp_1a44f4124f9ae71858e16504078164482a" kindref="member">SIG_IDX</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetSFcnParamTunable(S,<ref refid="onlineMonitorWrapper_8cpp_1ab371d205596339e3b2d515c05c156fa2" kindref="member">MAX_ROB_IDX</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetSFcnParamTunable(S,<ref refid="onlineMonitorWrapper_8cpp_1af6df87e65a8ff17763f6ec75b894577b" kindref="member">REFRESH_IDX</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specify<sp/>I/O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ssSetNumInputPorts(S,<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssSetInputPortDimensionInfo(S,<sp/>0,<sp/>DYNAMIC_DIMENSION))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetInputPortWidth(S,<sp/>0,<sp/>DYNAMICALLY_SIZED);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetInputPortDirectFeedThrough(S,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ssSetNumOutputPorts(S,1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetOutputPortWidth(S,<sp/>0,<sp/><ref refid="onlineMonitorWrapper_8cpp_1acd0a37388395174a7c197805a76a4ddb" kindref="member">NOUTPORT</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetNumSampleTimes(S,<sp/>1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>place<sp/>for<sp/>C++<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetNumPWork(S,<sp/>1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetSimStateCompliance(S,<sp/>USE_CUSTOM_SIM_STATE);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetOptions(S,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SS_OPTION_WORKS_WITH_CODE_REUSE<sp/>|</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SS_OPTION_EXCEPTION_FREE_CODE);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MATLAB_MEX_FILE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MDL_SET_INPUT_PORT_DIMENSION_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mdlSetInputPortDimensionInfo(SimStruct<sp/>*S,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_T<sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DimsInfo_T<sp/>*dimsInfo)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssSetInputPortDimensionInfo(S,<sp/>port,<sp/>dimsInfo))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MATLAB_MEX_FILE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MDL_SET_OUTPUT_PORT_DIMENSION_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mdlSetOutputPortDimensionInfo(SimStruct<sp/>*S,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_T<sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DimsInfo_T<sp/>*dimsInfo)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ssSetOutputPortDimensionInfo(S,<sp/>port,<sp/>dimsInfo))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MATLAB_MEX_FILE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>MDL_SET_DEFAULT_PORT_DIMENSION_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function:<sp/>mdlSetDefaultPortDimensionInfo<sp/>===========================================</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>Abstract:</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>no<sp/>ports<sp/>were<sp/>specified,<sp/>the<sp/>default<sp/>is<sp/>an<sp/>input<sp/>port<sp/>of<sp/>width<sp/>2</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/><sp/><sp/>and<sp/>an<sp/>output<sp/>port<sp/>of<sp/>width<sp/>1.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mdlSetDefaultPortDimensionInfo(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetInputPortWidth(S,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetOutputPortWidth(S,<sp/>0,<sp/><ref refid="onlineMonitorWrapper_8cpp_1acd0a37388395174a7c197805a76a4ddb" kindref="member">NOUTPORT</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="onlineMonitorWrapper_8cpp_1a12be303c445022c9cfb5a1c7afa4fb1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MDL_INITIALIZE_CONDITIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function:<sp/>mdlInitializeConditions<sp/>========================================</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>Abstract:</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Initialize<sp/>discrete<sp/>states<sp/>to<sp/>initial<sp/>min-max<sp/>robustnesses</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="onlineMonitorWrapper_8cpp_1a2d673fc64bb19bb80be024c2e1e6d5b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1a2d673fc64bb19bb80be024c2e1e6d5b5" kindref="member">mdlInitializeConditions</ref>(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/>*x0<sp/><sp/><sp/><sp/><sp/>=<sp/>ssGetRealDiscStates(S);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/>max_rob<sp/>=<sp/>mxGetScalar(<ref refid="onlineMonitorWrapper_8cpp_1a3101c2943eb48b232d8c727de0e1c1f8" kindref="member">MAX_ROB</ref>(S));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>x0[<ref refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" kindref="member">UP_IDX</ref>]<sp/><sp/>=<sp/><sp/>max_rob;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>x0[<ref refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" kindref="member">LOW_IDX</ref>]<sp/>=<sp/>-max_rob;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function:<sp/>mdlInitializeSampleTimes<sp/>=========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Abstract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>sample<sp/>time(s)<sp/>for<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>S-function.<sp/>You<sp/>must<sp/>register<sp/>the<sp/>same<sp/>number<sp/>of<sp/>sample<sp/>times<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>specified<sp/>in<sp/>ssSetNumSampleTimes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="onlineMonitorWrapper_8cpp_1a4308a5a20d9c7060391059b1dfce872e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1a4308a5a20d9c7060391059b1dfce872e" kindref="member">mdlInitializeSampleTimes</ref>(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ssSetSampleTime(S,<sp/>0,<sp/>INHERITED_SAMPLE_TIME);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/>refresh_rate<sp/>=<sp/>mxGetScalar(<ref refid="onlineMonitorWrapper_8cpp_1a1e2601b901f54b2a3bb78a8b889b3ca8" kindref="member">REFRESH_RATE</ref>(S));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetSampleTime(S,<sp/>0,<sp/>refresh_rate);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetOffsetTime(S,<sp/>0,<sp/>0.0);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>ssSetModelReferenceSampleTimeDefaultInheritance(S);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function:<sp/>mdlStart<sp/>=======================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Abstract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>called<sp/>once<sp/>at<sp/>start<sp/>of<sp/>model<sp/>execution.<sp/>If<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>have<sp/>states<sp/>that<sp/>should<sp/>be<sp/>initialized<sp/>once,<sp/>this<sp/>is<sp/>the<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>do<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="onlineMonitorWrapper_8cpp_1ac032abbf580c891fb0c11e63e9bc668a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MDL_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="onlineMonitorWrapper_8cpp_1a0dd07daf338cf84d1aee4bb8b6771720" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1a0dd07daf338cf84d1aee4bb8b6771720" kindref="member">mdlStart</ref>(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signal_buf<sp/>=<sp/>mxArrayToString(<ref refid="onlineMonitorWrapper_8cpp_1a86c602691f44bb031f6a90422715a525" kindref="member">SIGNAL_STRING</ref>(S));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stl_buf<sp/>=<sp/>mxArrayToString(<ref refid="onlineMonitorWrapper_8cpp_1a167ae71e1124a616d9f5b31deb4115ad" kindref="member">STL_STRING</ref>(S));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>phi_st<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>&quot;</highlight><highlight class="normal">+<sp/>string(signal_buf)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;phi:=&quot;</highlight><highlight class="normal"><sp/>+<sp/>string(stl_buf);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>mxFree(signal_buf);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>mxFree(stl_buf);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>new<sp/>C++<sp/>object<sp/>in<sp/>the<sp/>pointers<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref><sp/>*stl_driver<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>stl_driver-&gt;<ref refid="classCPSGrader_1_1STLDriver_1a0d23fc7f64a82fa33f7a9f4f42eea915" kindref="member">parse_string</ref>(phi_st);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>ssGetPWork(S)[0]<sp/>=<sp/>stl_driver;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="onlineMonitorWrapper_8cpp_1a7556dbbf5cb7f9946d3e39bcda40c63b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MDL_UPDATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="onlineMonitorWrapper_8cpp_1a90b55be5367122a2cb94e9ac87253228" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1a90b55be5367122a2cb94e9ac87253228" kindref="member">mdlUpdate</ref>(SimStruct<sp/>*S,<sp/>int_T<sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref><sp/>*stl_driver<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ssGetPWork(S)[0]);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_rob<sp/>=<sp/>mxGetScalar(<ref refid="onlineMonitorWrapper_8cpp_1a3101c2943eb48b232d8c727de0e1c1f8" kindref="member">MAX_ROB</ref>(S));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>Signal::BigM<sp/>=<sp/>max_rob;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>data<sp/>addresses<sp/>of<sp/>I/O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>InputRealPtrsType<sp/><sp/>u<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>ssGetInputPortRealSignalPtrs(S,0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>int_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_width<sp/><sp/>=<sp/><sp/>ssGetInputPortWidth(S,0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>ssGetRealDiscStates(S);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>ssGetT(S);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>points;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>points.push_back(T);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int_T<sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>u_width;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.push_back(*u[i]);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>stl_driver-&gt;<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.push_back(points);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rob_up<sp/>=<sp/>max_rob;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rob_low=<sp/>-max_rob;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1Signal" kindref="compound">Signal</ref><sp/>z_up,<sp/>z_low;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stl_driver-&gt;<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>.size()&gt;2)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1transducer" kindref="compound">transducer</ref><sp/>*phi<sp/>=<sp/>stl_driver-&gt;<ref refid="classCPSGrader_1_1STLDriver_1a1210fa1f2fad7a525c1a581e9fcb904a" kindref="member">formula_map</ref>[</highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">]-&gt;clone();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi-&gt;<ref refid="classCPSGrader_1_1transducer_1a387f7e246ca12a83ed2c4c3edc95c419" kindref="member">set_trace_data_ptr</ref>(stl_driver-&gt;<ref refid="classCPSGrader_1_1STLDriver_1ae6166510d67e96f633587b70bd12f0db" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rob_up<sp/><sp/>=<sp/>phi-&gt;<ref refid="classCPSGrader_1_1transducer_1a2b52cb7bb8b43d673e40620b96b2bec5" kindref="member">compute_upper_rob</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rob_low<sp/>=<sp/>phi-&gt;<ref refid="classCPSGrader_1_1transducer_1a341385fcb12299bbf8252ab355bd0198" kindref="member">compute_lower_rob</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rob_up==<ref refid="src_2include_2signal_8h_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rob_up=<sp/>max_rob;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rob_low==<ref refid="src_2include_2signal_8h_1ae420caa0af9cbdf102ed255034e27c5b" kindref="member">BOTTOM</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rob_low=<sp/>-max_rob;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>xd[<ref refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" kindref="member">UP_IDX</ref>]<sp/>=<sp/><sp/>rob_up;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>xd[<ref refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" kindref="member">LOW_IDX</ref>]<sp/>=<sp/>rob_low;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function:<sp/>mdlOutputs<sp/>=======================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Abstract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>compute<sp/>the<sp/>outputs<sp/>of<sp/>your<sp/>S-function<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="onlineMonitorWrapper_8cpp_1ab6c8c16502dd4374f9f36cfd58cbbd15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1ab6c8c16502dd4374f9f36cfd58cbbd15" kindref="member">mdlOutputs</ref>(SimStruct<sp/>*S,<sp/>int_T<sp/>tid)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xd<sp/><sp/><sp/><sp/>=<sp/>ssGetRealDiscStates(S);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>real_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/><sp/><sp/><sp/><sp/>=<sp/>ssGetOutputPortRealSignal(S,<sp/>0);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>y[<ref refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" kindref="member">UP_IDX</ref>]<sp/>=<sp/><sp/>xd[<ref refid="onlineMonitorWrapper_8cpp_1a34c9dd314bad1f59f64cbee9303af11c" kindref="member">UP_IDX</ref>];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>y[<ref refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" kindref="member">LOW_IDX</ref>]<sp/>=<sp/>xd[<ref refid="onlineMonitorWrapper_8cpp_1a107fd0f5c849346e84810f25e8e2dd1e" kindref="member">LOW_IDX</ref>];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function:<sp/>mdlTerminate<sp/>=====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Abstract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>In<sp/>this<sp/>function,<sp/>you<sp/>should<sp/>perform<sp/>any<sp/>actions<sp/>that<sp/>are<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>at<sp/>the<sp/>termination<sp/>of<sp/>a<sp/>simulation.<sp/><sp/>For<sp/>example,<sp/>if<sp/>memory<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>allocated<sp/>in<sp/>mdlStart,<sp/>this<sp/>is<sp/>the<sp/>place<sp/>to<sp/>free<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="onlineMonitorWrapper_8cpp_1a343acfd8b3b5308d6c94bbf40efbbac5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="onlineMonitorWrapper_8cpp_1a343acfd8b3b5308d6c94bbf40efbbac5" kindref="member">mdlTerminate</ref>(SimStruct<sp/>*S)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>and<sp/>destroy<sp/>C++<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref><sp/>*stl_driver<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classCPSGrader_1_1STLDriver" kindref="compound">STLDriver</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ssGetPWork(S)[0]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>stl_driver;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Required<sp/>S-function<sp/>trailer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>MATLAB_MEX_FILE<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>this<sp/>file<sp/>being<sp/>compiled<sp/>as<sp/>a<sp/>MEX-file?<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulink.c&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MEX-file<sp/>interface<sp/>mechanism<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cg_sfun.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Code<sp/>generation<sp/>registration<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/zhenya/CauMon/breach/Online/src/onlineMonitorWrapper.cpp"/>
  </compounddef>
</doxygen>
